/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenTimelock } from "../TokenTimelock";

export class TokenTimelock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    beneficiary_: string,
    releaseTime_: BigNumberish,
    overrides?: Overrides
  ): Promise<TokenTimelock> {
    return super.deploy(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    ) as Promise<TokenTimelock>;
  }
  getDeployTransaction(
    token_: string,
    beneficiary_: string,
    releaseTime_: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    );
  }
  attach(address: string): TokenTimelock {
    return super.attach(address) as TokenTimelock;
  }
  connect(signer: Signer): TokenTimelock__factory {
    return super.connect(signer) as TokenTimelock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTimelock {
    return new Contract(address, _abi, signerOrProvider) as TokenTimelock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161085738038061085783398101604081905261002f9161007a565b4281116100575760405162461bcd60e51b815260040161004e906100bc565b60405180910390fd5b6001600160601b0319606093841b81166080529190921b1660a05260c052610126565b60008060006060848603121561008e578283fd5b83516100998161010e565b60208501519093506100aa8161010e565b80925050604084015190509250925092565b60208082526032908201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260408201527165666f72652063757272656e742074696d6560701b606082015260800190565b6001600160a01b038116811461012357600080fd5b50565b60805160601c60a05160601c60c0516106fd61015a60003960006101ba015260006098015260006101de01526106fd6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a1461008e575b600080fd5b610059610096565b6040516100669190610483565b60405180910390f35b6100776100ba565b005b6100816101b8565b604051610066919061068e565b6100596101dc565b7f000000000000000000000000000000000000000000000000000000000000000090565b6100c26101b8565b4210156100ea5760405162461bcd60e51b81526004016100e1906104e3565b60405180910390fd5b60006100f46101dc565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161011f9190610483565b60206040518083038186803b15801561013757600080fd5b505afa15801561014b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016f919061044f565b9050600081116101915760405162461bcd60e51b81526004016100e190610631565b6101b561019c610096565b826101a56101dc565b6001600160a01b03169190610200565b50565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6102838363a9059cbb60e01b848460405160240161021f929190610497565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610288565b505050565b60006102dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103179092919063ffffffff16565b80519091501561028357808060200190518101906102fb919061042f565b6102835760405162461bcd60e51b81526004016100e1906105d4565b60606103268484600085610330565b90505b9392505050565b6060824710156103525760405162461bcd60e51b81526004016100e190610540565b61035b856103f0565b6103775760405162461bcd60e51b81526004016100e19061059d565b600080866001600160a01b031685876040516103939190610467565b60006040518083038185875af1925050503d80600081146103d0576040519150601f19603f3d011682016040523d82523d6000602084013e6103d5565b606091505b50915091506103e58282866103f6565b979650505050505050565b3b151590565b60608315610405575081610329565b8251156104155782518084602001fd5b8160405162461bcd60e51b81526004016100e191906104b0565b600060208284031215610440578081fd5b81518015158114610329578182fd5b600060208284031215610460578081fd5b5051919050565b60008251610479818460208701610697565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526104cf816040850160208701610697565b601f01601f19169190910160400192915050565b60208082526032908201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260408201527f65666f72652072656c656173652074696d650000000000000000000000000000606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560408201527f6173650000000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60005b838110156106b257818101518382015260200161069a565b838111156106c1576000848401525b5050505056fea264697066735822122043103474cff7ea791c8c53186695823172041a529aa0e6eca555519a3b1a0d1a64736f6c63430008000033";
